@page "/Configuracion"
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Tarea7.Models
@using Tarea7.Data
@using Tarea7.Data.Repositorio
@inject IRepositorioVacuna RepositorioVacuna
@inject IJSRuntime js




<div class="row justify-content-center">
    <div class="col-8">
        <div class="alert alert-info text-center">
            <h1>Configuracion de Vacuna</h1>
        </div>
    </div>
</div>


<div class="d-flex bd-highlight">
  
  
 
</div>


<div class="d-flex bd-highlight">
  <div class="p-2 flex-grow-1 bd-highlight"><button type="button" class="btn btn-primary p-2 flex-grow-1 bd-highlight" data-bs-toggle="modal" data-bs-target="#exampleModal">
  Agregar Nueva Vacuna
   </button></div>
   

   <div class="p-2 bd-highlight"> <button type="button" class="btn btn-danger p-2 bd-highlight" data-bs-toggle="modal" data-bs-target="#ModalEliminar">
      Eliminar
     </button> </div>
 
 <div class="p-2 bd-highlight"> <button type="button" class="btn btn-success p-2 bd-highlight" data-bs-toggle="modal" data-bs-target="#ModalEditarbuscar">
      Editar
     </button> </div>

      
</div>

<br/>
<br/>

<!-- Modal Eliminar -->
<div class="modal fade" id="ModalEliminar" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel" >Digite el id que quiere Eliminar</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        
        <input type="text" class="form-control" @bind-value="@id"/>
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" >Save changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal Agregar-->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Agregar Vacuna</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">

       <EditForm Model="vacuna" OnValidSubmit="@(() => GuardarDatos())">
  <div class="card-body shadow p-3 mb-5 bg-body rounded">
                <DataAnnotationsValidator/>
                <div class="row justify-content-center mb-3">
                    <div class="col-4">
                        <label>Marca:</label>
                        <InputText @bind-Value="vacuna.marca" class="form-control"/>
                        <ValidationMessage For="() =>vacuna.marca"/>
                    </div>

                    <div class="col-4">
                        <label>Cantidad:</label>
                        <InputNumber @bind-Value="vacuna.cantidad" class="form-control"/>
                        <ValidationMessage For="() =>vacuna.cantidad"/>
                    </div>
                
                        <div class="col-4">
                            <label>Estado:</label>
                            <InputSelect @bind-Value="vacuna.estado" class="form-control">
                                <option value="1">Activo</option>
                                <option value="0">No Activo </option>
                            </InputSelect>
                        </div>
                    </div>

                    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">Agregar</button>
      </div>
            </div>
 </EditForm>
      </div> 
    </div>
  </div>
</div>


<!-- Modal Editar-->






<!-- Esta es la tabla-->
<table class="table table">
  <thead>
    <tr>
      <th scope="col">Id</th>
      <th scope="col">Marca</th>
      <th scope="col">Cantidad</th>
      <th scope="col">Estatus</th>
      <th scope="col">Opciones</th>
    </tr>
  </thead>
  <tbody>
        @foreach (var item in listarvacuna)
        {
            <tr>
               <td>@item.id</td>
               <td>@item.marca</td>
               <td>@item.cantidad</td>
               <td>@item.estado</td>
              <td> 
                <a href="/EditarVacuana/@item.id" class="btn btn-success">Editar</a>
                <button class="btn btn-danger" @onclick="(() => EliminarVacuna(item.id))">Eliminar</button>

              </td>
            </tr>
        }
      
  </tbody>
</table>



@code
{
     [Parameter]
    public int id {get; set;}

    public int idEditar {get; set;}
    Vacuna vacuna = new Vacuna();
    List<Vacuna> listarvacuna = new List<Vacuna>();
    List<Vacuna> lista = new List<Vacuna>();

    //  vacunalista VAS = new vacunalista();
        
    
    protected override async Task OnInitializedAsync()
    {
        listarvacuna = await RepositorioVacuna.Get();



    }

     
    public async Task buscar(){

      NavigationManager.NavigateTo("/EditarVacuana/"+ idEditar);
    }

        public async Task EliminarVacuna(int id)
        {
            var confimacion = await js.InvokeAsync<bool>("msjConfim", "Confimar", "Seguro de borrar la vacuna?", "question");
            if(confimacion)
            {
                 await RepositorioVacuna.Delete(id);
                  await js.InvokeAsync<object>("msjAlert", "Eliminado Correctamente", "success");
                    listarvacuna = await RepositorioVacuna.Get();
                
            }
            else
            {
                await js.InvokeAsync<object>("msjAlert", "Ok", "success");
            }

        }

  public async Task GuardarDatos()
  {    
      var rs = await RepositorioVacuna.Add(vacuna);
      if(rs != null){
            await js.InvokeAsync<object>("msjAlert", "Registrado Correctamente", "success");
              listarvacuna = await RepositorioVacuna.Get();
                NavigationManager.NavigateTo("/Configuracion");
                 
        }  
  }

}