@page "/Configuracion"
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Tarea7.Models
@using Tarea7.Data
@using Tarea7.Data.Repositorio
@inject IRepositorioVacuna RepositorioVacuna
@inject IJSRuntime js




<div class="row justify-content-center">
    <div class="col-8">
        <div class="alert alert-info text-center">
            <h1>Agregar Vacunas</h1>
        </div>
    </div>
</div>


<EditForm Model="vacuna" OnValidSubmit="@(() => GuardarDatos())">
  <div class="card-body shadow p-3 mb-5 bg-body rounded">
                <DataAnnotationsValidator/>
                <div class="row justify-content-center mb-3">
                    <div class="col-4">
                        <label>Marca:</label>
                        <InputText @bind-Value="vacuna.marca" class="form-control"/>
                        <ValidationMessage For="() =>vacuna.marca"/>
                    </div>

                    <div class="col-4">
                        <label>Cantidad:</label>
                        <InputNumber @bind-Value="vacuna.cantidad" class="form-control"/>
                        <ValidationMessage For="() =>vacuna.cantidad"/>
                    </div>
                
                        <div class="col-4">
                            <label>Estado:</label>
                            <InputSelect @bind-Value="vacuna.estado" class="form-control">
                                <option value="1">Activo</option>
                                <option value="0">No Activo </option>
                            </InputSelect>
                        </div>
                    </div>

                    <div class="card-footer">
                <div class="row justify-content-center">
                
                    <button type="submit" class="btn btn-outline-primary col-6">Guardar</button>
            
                    <button type="submit" class="btn btn-outline-primary col-6">Mostrar Vacunas</button>
                </div>
                
            </div>

            </div>
 </EditForm>


<MudTable Items="@listarvacuna.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Marca</MudTh>
        <MudTh>Cantidad en Stock</MudTh>
        <MudTh>Estado</MudTh>
        <MudTh>Opcion</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.id</MudTd>
        <MudTd DataLabel="marca">@context.marca</MudTd>
        <MudTd DataLabel="cantidad">@context.cantidad</MudTd>
         <MudTd DataLabel="estado">@context.estado</MudTd>
        <MudTd DataLabel="Editar"> 
            <button class="btn btn-primary">Editar </button>
        </MudTd>

         <MudTd DataLabel="Eliminar"> 
            <button class="btn btn-danger">Eliminar </button>
        </MudTd>
    </RowTemplate>
</MudTable>


@* 
<MudTable Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Marca</MudTh>
        <MudTh>Cantidad en Stock</MudTh>
        <MudTh>Estado</MudTh>
        <MudTh>Opcion</MudTh>
    </HeaderContent>
    <RowTemplate>
        @foreach (Vacuna item in listarvacuna)
        {

        <MudTd DataLabel="Id">@item.id</MudTd>
        <MudTd DataLabel="marca">@item.marca</MudTd>
        <MudTd DataLabel="cantidad">@item.cantidad</MudTd>
         <MudTd DataLabel="estado">@item.estado</MudTd>
        <MudTd DataLabel="Editar"> 
            <button class="btn btn-primary">Editar </button>
        </MudTd>

         <MudTd DataLabel="Eliminar"> 
            <button class="btn btn-danger">Eliminar </button>
        </MudTd>
        }
        
    </RowTemplate>
</MudTable> *@



@code
{

    Vacuna vacuna = new Vacuna();
    List<Vacuna> listarvacuna = new List<Vacuna>();
    
    protected override async Task OnInitializedAsync(){
        listarvacuna = await RepositorioVacuna.Get();
    }

  public async Task GuardarDatos()
  {    
      var rs = await RepositorioVacuna.Add(vacuna);
      if(rs != null){
            await js.InvokeAsync<object>("msjAlert", "Registrado Correctamente", "success");
        }  
  }

}